name: Build ZuluIDE firmware

on: 
  push:
  workflow_dispatch:

jobs:
  build_firmware:
    name: Build firmware on Ubuntu Latest
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4
        with:
          path: ZuluIDE
          fetch-depth: "0"
      
      - name: Install platformio
        run: |
          sudo pip install platformio
      
      - name: Checkout dependency repo
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.PRIVATE_SSH_KEY }}'
          cd ZuluIDE/lib/
          git clone git@github.com:rabbitholecomputing/ZuluIDE-RP2350B-Core1.git

      - name: Build firmware
        run: |
          cd ZuluIDE
          pio run -v
    
      - name: Rename firmware files
        run: |
          cd ZuluIDE
          utils/rename_binaries.sh

      - name: Upload binaries into build artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ZuluIDE/distrib/*
          name: ZuluIDE binaries
      
      - name: Upload to latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/main'
        run: |
          cd ZuluIDE
          git tag -d latest
          git tag latest
          git push origin --force latest
          cd distrib
          gh api repos/${GITHUB_REPOSITORY}/releases/tags/latest | jq -r '.assets[] | [.url] | @tsv' | xargs -n 1 gh api -X DELETE || true
          gh release upload --repo ${GITHUB_REPOSITORY} --clobber latest *

      - name: Upload to newly created release
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cd ZuluIDE/distrib
          RELEASE=$(basename ${{github.ref}})
          gh release upload --repo ${GITHUB_REPOSITORY} $RELEASE *
